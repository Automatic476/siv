import { Paper } from '@material-ui/core'

import { voters } from './election-parameters'

const redHex = '#e53739'

const VoteToken = ({ s }: { s?: boolean }) => (
  <span style={{ color: redHex, fontWeight: 'bold' }}>Vote Token{s ? 's' : ''}</span>
)
const Highlight = (props: { children: string }) => (
  <span style={{ backgroundColor: `${redHex}44`, border: `1px solid ${redHex}`, padding: '0 2px' }} {...props} />
)

export const Invitation = () => (
  <Paper elevation={3} style={{ marginBottom: 30, padding: '0.5rem 1.5rem', position: 'relative' }}>
    <img
      src="/protocol/step-1-invitation-icon.png"
      style={{ opacity: 0.5, position: 'absolute', right: 25, width: 40 }}
    />
    <p>
      From: <b>elections@local.gov</b> <br />
      To: <b>you@email.com</b> <br />
      Subject: <b>Your Ballot for Mayor</b>
    </p>
    <p>Voting for our next Mayor is now open.</p>
    <p>Votes accepted for the next 14 days.</p>
    <p>
      Click here to securely cast your vote: <br />
      <a style={{ cursor: 'pointer' }}>
        www.local.gov/2020election?id=
        <Highlight>{voters[0].token}</Highlight>
      </a>
    </p>
    <p>
      <i style={{ fontSize: 12 }}>
        This link is unique for you. Don&apos;t share it with anyone, or they&apos;ll be able to take your vote. (
        <a style={{ cursor: 'pointer' }}>Help</a>)
      </i>
    </p>
  </Paper>
)

export const InvitationExplanation = () => (
  <>
    <p>
      The point of this step is to get each voter their {<VoteToken />}, highlighted in <Highlight>red</Highlight>.
    </p>
    <div>
      <p style={{ fontWeight: 'bold' }}>Key Properties of {<VoteToken s />}</p>
      <ul style={{ bottom: 10, paddingInlineStart: 15, position: 'relative' }}>
        {[
          'required to vote',
          'unique per voter',
          'generated by election admin',
          'can only be used once (keep secret until used!)',
          'election admin can invalidate individual Tokens, & generate new ones, if necessary',
          'the public can see all Vote Tokens generated, invalidated, or used (but not content of any votes)',
        ].map((item, index) => (
          <li key={index} style={{ fontSize: 7, marginBottom: 5 }}>
            <span style={{ fontSize: 14, position: 'relative', top: 2 }}>{item}</span>
          </li>
        ))}
      </ul>
    </div>
    <br />
    <p>
      Here we present an easy distribution channel â€” a simple email. But election administrators could easily use other
      options, including 2-factor methods with SMS, TOTP, or IP address geolocation.
    </p>
    <p>
      Admins can even send Vote Tokens via traditional postal mail. This makes it easy for jurisdictions already
      offering Vote by Mail to begin accepting returned ballots online, gaining the powerful Speed, Privacy, &
      Verification features of SIV.
    </p>
  </>
)
